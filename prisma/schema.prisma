// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Medicamento {
  id                Int               @id @default(autoincrement())
  nomeMedicamento   String            @db.VarChar(30)
  controlado        Boolean?          @default(false)
  codigo_barras     Int               @db.Int
  estoque           Int               @db.SmallInt
  preco             Decimal           @db.Decimal(10, 2)
  isDeleted         Boolean?          @default(false)
  deletedAt         DateTime?          
  farmacia          Farmacia          @relation(fields: [farmaciaId], references: [id])
  farmaciaId        Int
  @@map("medicamentos")
}

model Usuario {
  id                Int               @id @default(autoincrement())
  nome              String            @db.VarChar(60)
  email             String            @db.VarChar(40)
  senha             String            @db.VarChar(60) 
  isDeleted         Boolean?          @default(false)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt  
  deletedAt         DateTime?          
  farmacia          Farmacia          @relation(fields: [farmaciaId], references: [id])
  farmaciaId        Int
  logs              Log[]
  @@map("usuarios")
}

model Farmacia {
  id                Int               @id @default(autoincrement())
  razaoSocial       String            @db.VarChar(60)
  cnpj              String            @db.VarChar(40)
  telefone          String            @db.VarChar(40)
  medicamentos      Medicamento[]
  usuarios          Usuario[]
  isDeleted         Boolean?          @default(false)
  deletedAt         DateTime? 
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  @@map("farmacia")
}

model Log {
  id                Int               @id @default(autoincrement())
  descricao         String            @db.VarChar(60)
  complemento       String            @db.VarChar(255)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt  
  usuario           Usuario           @relation(fields: [usuarioId], references: [id])
  usuarioId         Int
  @@map("logs")
}
